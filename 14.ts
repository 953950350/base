
// 二叉树的序列表和反序列化
// 怎么序列化就怎么反序列化

// 平衡二叉树：在这颗树中任何一个节点他左子树和右子树的高度差不超过1
// 递归函数能回到一个节点3次。
// 1. 左树是否平衡
// 2. 右树是否平衡
// 3. 左树的高度
// 4. 右树的高度
// 核心点：树形dp。需要再进一步研究

// 搜索二叉树：
// 对于这颗树上任何一个节点为头的树，左子树都比他小，右子树都比他大
// 二叉树中序遍历的情况下是依次升序的，就是搜索二叉树

// 完全二叉树：每一层从左往右依次填满
// 1. 如果出现一个节点有右孩子没有左孩子，直接返回fals。
// 2. 如果出现一个节点有左孩子没有右孩子，那么后续的节点都必须为叶节点
